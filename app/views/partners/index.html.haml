/ views/partners/index.html.haml

= link_to new_partner_path, 
  class: 'btn btn-primary pull-right', 
  role: 'button', 
  title: th('activerecord.actions.new') do
  = i 'plus'
  = t 'activerecord.actions.new'
          
%h1
  = i Partner.decorator_class.icon
  = tmp :partner
  
%p= t 'descriptions.partners'

/ %h2 Filters
/ = bootstrap_form_tag url: partners_path, method: :get, layout: :inline do |f|
/   = f.select :category, Partner.categories.keys.map{|l| [l.humanize, l]}, :prompt => "Select Category..."
/   = f.text_field :starts_with, value: params[:starts_with]
/   = f.text_field :contact, value: params[:contact]
/   = f.text_field :recent
/   = f.text_field :inactive
/   = f.select :owner, User.all.map{|_| [_.username, _.id]}, :prompt => "Select User..."
/   = f.submit

= render 'filters'

= bootstrap_form_tag url: partners_path, method: :get, layout: :inline do |f|
  = f.hidden_field :recent, value: params[:value]       unless params[:recent].blank?
  = f.hidden_field :inactive, value: params[:inactive]  unless params[:inactive].blank?
  = f.hidden_field :owner, value: params[:owner]        unless params[:owner].blank?
  = f.text_field :starts_with, value: params[:starts_with], hide_label: true, class: 'form-control-sm', placeholder: 'Title'
  = f.text_field :contact,     value: params[:contact],     hide_label: true, class: 'form-control-sm', placeholder: 'contact'
  = f.select :category, Partner.categories.keys.map{|l| [l.humanize, l]}, 
    selected: params[:category], 
    include_blank: 'All categories',
    hide_label: true
  = f.submit 'Filter'

.table-responsive
  %table.table.table-sm.table-hover
    %thead.thead-default
      %tr
        %th.text-xs-center #
        %th
          = link_to sorted_entries_path(title: desc?(:title) ? :asc : :desc) do
            = han :partner, :title
          - unless params[:sort_by_title].blank?
            = i 'sort-alpha-asc' if asc? :title
            = i 'sort-alpha-desc' if desc? :title
          - unless params[:starts_with].blank?
            = link_to filtered_entries_path(starts_with: nil) do
              %span.fa-stack
                %i.fa.fa-filter.fa-stack-1x.text-primary
                %i.fa.fa-ban.fa-stack-1x.text-danger
        %th= han :partner, :category
        %th= han :partner, :contact
        %th.text-xs-center.text-lg-left
          = i Partner::Request.decorator_class.icon
          %span.hidden-md-down= tmp 'partner/request'
        %th.text-xs-center.text-lg-left
          = i Partner::Backlink.decorator_class.icon
          %span.hidden-md-down= tmp 'partner/backlink'
        %th= han :partner, :created_at
        %th 
    %tbody
      - @partners.each do |partner|
        %tr
          %th.text-xs-center{scope: "row"}= partner.id
          %td
            = link_to partner_path(partner) do
              = partner.title
            = link_to partner.url do 
              = i 'external-link'
          %td= partner.category.humanize
          %td
            = partner.contact_name
            - if partner.contact_email.present?
              = mail_to partner.contact_email do
                = i 'envelope'
            - if partner.webform_url.present?
              = link_to partner.webform_url do
                = i 'wpforms'
          
          %td.text-xs-center.text-lg-left
            %span.label.label-default= link_to partner.requests.count, partner_requests_path(partner_id: partner)
            = link_to new_partner_request_path(partner_id: partner), class: 'label label-primary', role: 'button', title: th('activerecord.actions.new') do
              = i 'plus'
              %span.hidden-md-down= t 'activerecord.actions.new'
          
          %td.text-xs-center.text-lg-left
            %span.label.label-default= link_to partner.backlinks.count, partner_backlinks_path(partner_id: partner)
            = link_to new_partner_backlink_path(partner_id: partner), class: 'label label-primary', role: 'button', title: th('activerecord.actions.new') do
              = i 'plus'
              %span.hidden-md-down= t 'activerecord.actions.new'
          %td
            = partner.decorate.created_at 
          %td
            = link_to partner_path(partner) do
              = i 'eye'
            = link_to edit_partner_path(partner) do
              = i 'pencil'
            = link_to partner_path(partner), method: :delete, data: { confirm: 'Are you sure?' } do
              = i 'trash-o'
        